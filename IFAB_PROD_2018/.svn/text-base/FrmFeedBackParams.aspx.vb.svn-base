
Partial Class FrmFeedBackParams
    Inherits BasePage
    Dim dt As New DataTable
    Dim FeedParams As New FeedBackParamsBL

    Protected Sub btnGenrate_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnGenrate.Click
        If (Session("BranchCode") = Session("ParentBranch")) Then
            dt = FeedParams.CheckFeedBackGenStatus()
            If dt.Rows.Count > 0 Then
                msginfo.Text = ValidationMessage(1044)
                lblMsg.Text = ValidationMessage(1014)
            Else

                FeedParams.GenerateParameters()
                DisplayGrid()
            End If
        Else
            msginfo.Text = ValidationMessage(1045)
            lblMsg.Text = ValidationMessage(1014)
        End If
        Multilingual()
    End Sub
    Sub DisplayGrid()
        dt = FeedParams.ViewParameters()
        If dt.Rows.Count = 0 Then
            msginfo.Text = ValidationMessage(1023)
            lblMsg.Text = ValidationMessage(1014)
            GVFeedBack.Visible = False
        Else
            msginfo.Text = ValidationMessage(1014)
            lblMsg.Text = ValidationMessage(1014)
            GVFeedBack.Visible = True
            GVFeedBack.DataSource = dt
            GVFeedBack.DataBind()
            Multilingual()
        End If

    End Sub

    Protected Sub btnView_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnView.Click
        DisplayGrid()
    End Sub

    Protected Sub btnClear_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnClear.Click
        If (Session("BranchCode") = Session("ParentBranch")) Then

            dt = FeedParams.ViewParameters()
            If dt.Rows.Count = 0 Then
                msginfo.Text = ValidationMessage(1047)
                lblMsg.Text = ValidationMessage(1014)
            Else
                FeedParams.ClearParameters()
                lblMsg.Text = ValidationMessage(1046)
                msginfo.Text = ValidationMessage(1014)
                GVFeedBack.Visible = False
                dt.Clear()
                GVFeedBack.DataSource = Nothing
                GVFeedBack.DataBind()
                Multilingual()
            End If
        Else
            msginfo.Text = ValidationMessage(1048)
            lblMsg.Text = ValidationMessage(1014)
        End If
    End Sub

    Protected Sub BtnUpdate_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles BtnUpdate.Click
        If (Session("BranchCode") = Session("ParentBranch")) Then
            Dim FeedBackId, Max, Min As Integer
            Dim ParameterName As String
            If GVFeedBack.Rows.Count = 0 Then
                msginfo.Text = ValidationMessage(1049)
                lblMsg.Text = ValidationMessage(1014)
                Exit Sub
            End If
            For Each Grid As GridViewRow In GVFeedBack.Rows
                FeedBackId = CType(Grid.FindControl("lblFeedbackId"), HiddenField).Value
                ParameterName = CType(Grid.FindControl("txtParameterName"), TextBox).Text
                If CType(Grid.FindControl("txtMax"), TextBox).Text = "" Then
                    Max = 0
                Else
                    Max = CType(Grid.FindControl("txtMax"), TextBox).Text
                End If
                If CType(Grid.FindControl("txtMin"), TextBox).Text = "" Then
                    Min = 0
                Else
                    Min = CType(Grid.FindControl("txtMin"), TextBox).Text
                End If
                If ParameterName <> "" Then

                    If CType(Grid.FindControl("txtMax"), TextBox).Text = "" Then
                        msginfo.Text = ValidationMessage(1050)
                        lblMsg.Text = ValidationMessage(1014)
                        Exit For
                    ElseIf CType(Grid.FindControl("txtMin"), TextBox).Text = "" Then
                        msginfo.Text = ValidationMessage(1051)
                        lblMsg.Text = ValidationMessage(1014)
                        Exit For
                    ElseIf Max < Min Then
                        msginfo.Text = ValidationMessage(1052)
                        lblMsg.Text = ValidationMessage(1014)
                        Exit For
                    Else

                        Max = CType(Grid.FindControl("txtMax"), TextBox).Text

                        Min = CType(Grid.FindControl("txtMin"), TextBox).Text

                        FeedParams.UpdateFeedBackParameters(FeedBackId, ParameterName, Max, Min)
                        lblMsg.Text = ValidationMessage(1053)
                        msginfo.Text = ValidationMessage(1014)
                    End If
                ElseIf ParameterName = "" And Max = 0 And Min = 0 Then
                    Max = -1

                    Min = -1

                    FeedParams.UpdateFeedBackParameters(FeedBackId, ParameterName, Max, Min)
                    lblMsg.Text = ValidationMessage(1053)
                    msginfo.Text = ValidationMessage(1014)
                End If
            Next
        Else
            msginfo.Text = ValidationMessage(1021)
            lblMsg.Text = ValidationMessage(1014)
        End If
        Multilingual()
    End Sub
    Protected Sub Page_Load1(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load
        Dim heading As String
        heading = Session("RptFrmTitleName")
        Me.Lblheading.Text = heading
        If Not IsPostBack Then
            Control_Text_Multilingual()
        End If
    End Sub
    <System.Web.Services.WebMethod()> Public Sub AbandonSession()
        Dim i As Int16 = UserDetailsDB.UpdateUserlog()
        Response.Redirect("LogIn.aspx")
    End Sub

    Protected Sub GVFeedBack_Sorting(ByVal sender As Object, ByVal e As System.Web.UI.WebControls.GridViewSortEventArgs) Handles GVFeedBack.Sorting
        Dim sortingDirection As String = String.Empty
        If dir() = SortDirection.Ascending Then
            dir = SortDirection.Descending
            sortingDirection = "Desc"
        Else
            dir = SortDirection.Ascending
            sortingDirection = "Asc"
        End If
        dt = FeedParams.ViewParameters()
        Dim sortedView As New DataView(dt)
        sortedView.Sort = Convert.ToString(e.SortExpression) & " " & sortingDirection
        GVFeedBack.DataSource = sortedView
        GVFeedBack.DataBind()
        GVFeedBack.Visible = True
        Multilingual()
    End Sub
    Public Property dir() As SortDirection
        Get
            If ViewState("dirState") Is Nothing Then
                ViewState("dirState") = SortDirection.Descending
            End If
            Return DirectCast(ViewState("dirState"), SortDirection)
        End Get
        Set(ByVal value As SortDirection)
            ViewState("dirState") = value
        End Set
    End Property
    ''Code Written for Multilingual By Ajit Kumar Singh on 12th Aug
    ''Retriving the text of controls based on Language
    Sub Multilingual()
        Dim j As Integer
        Dim k As Integer
        Dim dtl As DataTable
        dtl = Session("Control_Text")
        Dim i As Integer = dtl.Rows.Count
        While (i <> 0)
            If dtl.Rows(i - 1).Item("ControlType") = "Label" Then
                Dim myLabel As Label = CType(Me.UpdatePanel1.FindControl(dtl.Rows(i - 1).Item("ControlId")), Label)
                myLabel.Text = dtl.Rows(i - 1).Item("Default_Text")
                i = i - 1
            ElseIf dtl.Rows(i - 1).Item("ControlType") = "Button" Then
                If dtl.Rows(i - 1).Item("ControlCommandName") = btnGenrate.CommandName Then
                    Dim myButton As Button = CType(Me.UpdatePanel1.FindControl(dtl.Rows(i - 1).Item("ControlId")), Button)
                    myButton.Text = dtl.Rows(i - 1).Item("Default_Text")
                    i = i - 1
                ElseIf dtl.Rows(i - 1).Item("ControlCommandName") = btnView.CommandName Then
                    Dim myButton As Button = CType(Me.UpdatePanel1.FindControl(dtl.Rows(i - 1).Item("ControlId")), Button)
                    myButton.Text = dtl.Rows(i - 1).Item("Default_Text")
                    i = i - 1
                ElseIf dtl.Rows(i - 1).Item("ControlCommandName") = btnClear.CommandName Then
                    Dim myButton As Button = CType(Me.UpdatePanel1.FindControl(dtl.Rows(i - 1).Item("ControlId")), Button)
                    myButton.Text = dtl.Rows(i - 1).Item("Default_Text")
                    i = i - 1
                ElseIf dtl.Rows(i - 1).Item("ControlCommandName") = BtnUpdate.CommandName Then
                    Dim myButton As Button = CType(Me.UpdatePanel1.FindControl(dtl.Rows(i - 1).Item("ControlId")), Button)
                    myButton.Text = dtl.Rows(i - 1).Item("Default_Text")
                    i = i - 1
                Else
                    i = i - 1
                End If
            ElseIf dtl.Rows(i - 1).Item("ControlType") = "GridLabel" Then
                j = GVFeedBack.Columns.Count
                While (j <> 0)
                    If GVFeedBack.Columns(j - 1).HeaderText = dtl.Rows(i - 1).Item("ControlCommandName") Then
                        GVFeedBack.Columns(j - 1).HeaderText = dtl.Rows(i - 1).Item("Default_Text")
                    End If
                    j = j - 1
                End While
                i = i - 1
            ElseIf dtl.Rows(i - 1).Item("ControlType") = "GridButton" Then
                k = GVFeedBack.Rows.Count
                If dtl.Rows(i - 1).Item("ControlCommandName") = "Acknowledge" Then
                    While (k <> 0)
                        Dim lnkCanc As LinkButton = CType(GVFeedBack.Rows(k - 1).FindControl(dtl.Rows(i - 1).Item("ControlId")), LinkButton)
                        lnkCanc.Text = dtl.Rows(i - 1).Item("Default_Text")
                        k = k - 1
                    End While
                ElseIf dtl.Rows(i - 1).Item("ControlCommandName") = "Edit" Then
                    k = GVFeedBack.Rows.Count
                    While (k <> 0)
                        Dim lnkCanc As LinkButton = CType(GVFeedBack.Rows(k - 1).FindControl(dtl.Rows(i - 1).Item("ControlId")), LinkButton)
                        lnkCanc.Text = dtl.Rows(i - 1).Item("Default_Text")
                        k = k - 1
                    End While
                ElseIf dtl.Rows(i - 1).Item("ControlCommandName") = "Delete" Then
                    k = GVFeedBack.Rows.Count
                    While (k <> 0)
                        Dim lnkCanc As LinkButton = CType(GVFeedBack.Rows(k - 1).FindControl(dtl.Rows(i - 1).Item("ControlId")), LinkButton)
                        lnkCanc.Text = dtl.Rows(i - 1).Item("Default_Text")
                        k = k - 1
                    End While
                End If
                i = i - 1
            ElseIf dtl.Rows(i - 1).Item("ControlType") = "CheckBox" Then
                Dim myCheckbox As CheckBox = CType(Me.UpdatePanel1.FindControl(dtl.Rows(i - 1).Item("ControlId")), CheckBox)
                myCheckbox.Text = dtl.Rows(i - 1).Item("Default_Text")
                i = i - 1
            ElseIf dtl.Rows(i - 1).Item("ControlType") = "RadioButtonList" Then
                Dim myRadiobutton As RadioButtonList = CType(Me.UpdatePanel1.FindControl(dtl.Rows(i - 1).Item("ControlId")), RadioButtonList)
                Dim a As Integer = myRadiobutton.Items.Count
                While (a <> 0)
                    For Each li As ListItem In myRadiobutton.Items
                        If li.Value = dtl.Rows(i - 1).Item("ControlCommandName") Then
                            li.Text = dtl.Rows(i - 1).Item("Default_Text")
                        End If
                    Next
                    a = a - 1
                End While
                i = i - 1
            End If
        End While
    End Sub
    Public Sub Control_Text_Multilingual()
        Dim dtll As DataTable
        Dim FormName As String = Session("Code")
        Dim LanguageID As Integer
        If Session("LanguageID") = "" Then
            LanguageID = 0
        Else
            LanguageID = Session("LanguageID")
        End If
        If LanguageID <> 0 Then
            dtll = GlobalFunction.GetChangeLanguage(FormName, LanguageID)
            Session("Control_Text") = dtll
            Multilingual()
        End If
    End Sub
    Public Function ValidationMessage(ByVal ErrorCode As Integer) As String
        Dim dt2 As DataTable
        dt2 = Session("ValidationTable")
        Dim X As Integer = dt2.Rows.Count() - 1
        Dim str As String = " "
        For i As Integer = 0 To X
            If (dt2.Rows(i).Item("MessageCode").ToString() = ErrorCode) Then
                Return dt2.Rows(i).Item("MessageText").ToString()
            End If
        Next
        Return 0
    End Function
End Class
