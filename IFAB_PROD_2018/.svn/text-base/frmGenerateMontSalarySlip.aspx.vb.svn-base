
Partial Class frmGenerateMontSalarySlip
    Inherits BasePage
    Dim alt As String
    Dim BLL As New BLPayroll
    Dim Prop As New EntPayroll
    Dim mb As New MonthlyPayDetailsB
    Protected Sub btnGenerateMonthSalary_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnGenerateMonthSalary.Click
        If (Session("BranchCode") = Session("ParentBranch")) Then
            Dim month As String
            Dim year As Integer
            Dim Dept As String
            Dim dt, dt1 As New DataTable
            If ddlYear.SelectedValue <> "" And txtWorkingDays.Text <> "" And txtTotalDays.Text <> "" And txtPaymentdate.Text <> "" And txtPaymentrunDate.Text <> "" Then
                month = ddlMonth.SelectedItem.Text
                year = ddlYear.SelectedItem.Text
                Dept = DDLDeptType.SelectedValue
                dt = mb.getgrid(month, year, Dept)
                Prop.Year = ddlYear.SelectedItem.Text
                Prop.Month = ddlMonth.SelectedItem.Text
                Prop.Dept = DDLDeptType.SelectedValue
                dt1 = BLL.RptSalSlip(Prop)

                If CInt(txtTotalDays.Text) < CInt(txtWorkingDays.Text) Then
                    lblmsg.Text = "Working Days Should not be Greater then  Total Days."
                    lblGreen.Text = ""
                    Exit Sub
                End If

                If dt.Rows.Count > 0 Then
                    If dt1.Rows.Count > 0 Then
                        lblmsg.Text = "Salary already generated for the month " + ddlMonth.SelectedItem.Text + " and year " + ddlYear.SelectedItem.Text + "."
                        ddlMonth.Focus()
                        lblGreen.Text = ""
                        GVFill()
                        gvGenSalary.Visible = False
                    Else
                        Prop.Month = ddlMonth.SelectedItem.Text
                        Prop.Year = ddlYear.SelectedItem.Text
                        Prop.WD_InMonth = txtWorkingDays.Text
                        Prop.WorkDays = txtTotalDays.Text
                        Prop.PayDate = txtPaymentdate.Text
                        'If BLL.CheckSalary(Prop) Then

                        BLL.GenerateSalary(Prop)
                        lblmsg.Text = ""
                        lblGreen.Text = "Salary Generated for the month " + ddlMonth.SelectedItem.Text + " successfully."
                        txtWorkingDays.Focus()
                        txtWorkingDays.Text = ""
                        txtTotalDays.Text = ""
                        GVFill()
                    End If
                Else
                    lblmsg.Text = "Salary Not yet generated for the month " + ddlMonth.SelectedItem.Text + " and year " + ddlYear.SelectedItem.Text + "."
                    txtWorkingDays.Focus()
                    lblGreen.Text = ""
                End If
            Else
                lblmsg.Text = "Please enter all mandatory(*) fields."
                lblGreen.Text = ""
            End If
        Else
            lblmsg.Text = "You do not belong to this branch, cannot generate data."
            lblGreen.Text = ""
        End If
    End Sub
    Protected Sub btnprint_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnprint.Click
        Dim dt As New DataTable
        If ddlYear.SelectedItem.Text <> "" Then
            Prop.Month = ddlMonth.SelectedItem.Text
            Prop.Year = ddlYear.SelectedItem.Text
            dt = BLL.RptSalSlip(Prop)
            If dt.Rows.Count <> 0 Then
                Dim qrystring As String = "rptSalarySlip.aspx?" & "&Month=" & ddlMonth.SelectedItem.Text & "&Year=" & ddlYear.SelectedItem.Text
                ScriptManager.RegisterStartupScript(Page, Page.GetType(), "message", "<script>window.open('" & qrystring & "',null,'toolbar=no,scrollbars=yes,location=no,resizable =yes,width=800,height=600,left=40,top=80')</script>", False)
            Else
                lblmsg.Text = "No Records to display."
                txtWorkingDays.Focus()
                lblGreen.Text = ""
            End If
        Else
            lblmsg.Text = "Year field is Mandatory."
            lblGreen.Text = ""
        End If
    End Sub
    Protected Sub btnClearMonthSalary_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnClearMonthSalary.Click
        If (Session("BranchCode") = Session("ParentBranch")) Then
            txtWorkingDays.Focus()
            Dim dt As New DataTable
            Prop.Month = ddlMonth.SelectedItem.Text
            If ddlYear.SelectedItem.Text <> "" Then
                Prop.Year = ddlYear.SelectedItem.Text
                dt = BLL.RptSalSlip(Prop)
                If dt.Rows.Count > 0 Then
                    Prop.Year = ddlYear.SelectedItem.Text
                    Prop.Month = ddlMonth.SelectedItem.Text
                    Prop.Lock = BLL.LockStatus(Prop)

                    If Prop.Lock = "Y" Then
                        lblGreen.Text = ""
                        lblmsg.Text = "Records are locked, Cannot be cleared."
                        txtWorkingDays.Focus()
                    Else
                        BLL.DeleteSalary(Prop)
                        lblmsg.Text = ""
                        lblGreen.Text = "Salary Cleared for the month " + ddlMonth.SelectedItem.Text + " successfully."
                        txtWorkingDays.Focus()
                        gvGenSalary.Visible = False
                    End If
                Else
                    lblmsg.Text = "Salary already cleared for the month " + ddlMonth.SelectedItem.Text + " and year " + ddlYear.SelectedItem.Text + "."
                    lblGreen.Text = ""
                End If
            Else
                lblmsg.Text = " Year field is Mandatory."
                lblGreen.Text = ""
            End If
        Else
            lblmsg.Text = "You do not belong to this branch, cannot clear data."
            lblGreen.Text = ""
        End If
    End Sub
    Protected Sub btnEditMonth_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnEditMonth.Click
        Dim qrystring As String = "FormMonthlyPaydetails.aspx?"
        ScriptManager.RegisterStartupScript(Page, Page.GetType(), "message", "<script>window.open('" & qrystring & "',null,'toolbar=no,scrollbars=yes,location=no,resizable =yes,width=800,height=600,left=40,top=80')</script>", False)
        'Response.Redirect("FormMonthlyPaydetails.aspx")
    End Sub
    Protected Sub btnLockSalary_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnLockSalary.Click
        If (Session("BranchCode") = Session("ParentBranch")) Then
            Prop.Year = ddlYear.SelectedItem.Text
            Prop.Month = ddlMonth.SelectedItem.Text
            Prop.Dept = DDLDeptType.SelectedValue
            Dim dt2 As New DataTable
            dt2 = BLL.RptSalSlip(Prop)
            If dt2.Rows.Count > 0 Then
                ControlsPanel.Visible = False
                PasswordPanel.Visible = True
                txtPassword.Focus()
                lblpassError.Text = ""
                GVFill()
                Image1.Visible = False
                Image2.Visible = False
            Else
                lblmsg.Text = "Salary Not yet generated for the month " + ddlMonth.SelectedItem.Text + " and year " + ddlYear.SelectedItem.Text + "."
                lblGreen.Text = ""
                gvGenSalary.Visible = False
                Image1.Visible = True
                Image2.Visible = True
            End If

            'If gvGenSalary.Visible = True Then
            '    ControlsPanel.Visible = False
            '    PasswordPanel.Visible = True
            '    lblpassError.Text = ""
            '    GVFill()
            'Else
            '    lblmsg.Text = "Salary Not yet generated for the month " + ddlMonth.SelectedItem.Text + " and year " + txtYear.Text + "."
            '    lblGreen.Text = ""
            '    gvGenSalary.Visible = False
            'End If
        Else
            lblmsg.Text = "You do not belong to this branch, cannot lock/unlock data."
            lblGreen.Text = ""
        End If
    End Sub
    Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load
        Dim heading As String
        heading = Session("RptFrmTitleName")
        Me.Lblheading.Text = heading
        If Not Page.IsPostBack Then
            txtWorkingDays.Focus()
            txtPaymentdate.Text = Today.Date.ToString("dd-MMM-yyyy")
            txtPaymentrunDate.Text = Today.Date.ToString("dd-MMM-yyyy")
            'txtYear.Text = Today.Year
            ddlMonth.SelectedValue = Today.Month
            lblmsg.Text = ""
        End If
        Image1.Visible = True
        Image2.Visible = True
    End Sub
    Sub GVFill()
        LinkButton1.Focus()
        If ddlYear.SelectedItem.Text <> "" Then
            Prop.Year = ddlYear.SelectedItem.Text
            Prop.Month = ddlMonth.SelectedItem.Text
            Prop.Dept = DDLDeptType.SelectedValue
            Dim dt2 As New DataTable
            'gvGenSalary.DataSource = BLL.GetDetails(Prop)
            dt2 = BLL.RptSalSlip(Prop)
            Prop.Lock = BLL.LockStatus(Prop)

            If dt2.Rows.Count > 0 Then
                If Prop.Lock = "Y" Then

                    gvGenSalary.DataSource = dt2
                    gvGenSalary.DataBind()
                    gvGenSalary.Visible = True
                    gvGenSalary.Enabled = False
                Else
                    gvGenSalary.DataSource = dt2
                    gvGenSalary.DataBind()
                    gvGenSalary.Visible = True
                    gvGenSalary.Enabled = True
                End If

            Else
                lblmsg.Text = "No Records to display"
                lblGreen.Text = ""
                gvGenSalary.Visible = False
            End If

        Else
            lblmsg.Text = " Year field is Mandatory."
            lblGreen.Text = ""
        End If
        'If gvGenSalary.Rows.Count > 0 Then
        '    lblmsg.Text = "No records to display"
        '    lblGreen.Text = ""
        'End If
    End Sub
    Protected Sub ddlMonth_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles ddlMonth.SelectedIndexChanged
        GVFill()
    End Sub
    <System.Web.Services.WebMethod()> Public Sub AbandonSession()
        Dim i As Int16 = UserDetailsDB.UpdateUserlog()
        Response.Redirect("LogIn.aspx")
    End Sub
    Protected Sub btnView_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnView.Click
        lblGreen.Text = ""
        lblmsg.Text = ""
        GVFill()
        txtWorkingDays.Text = ""
        txtTotalDays.Text = ""
    End Sub

    Protected Sub btnPassword_Click(ByVal sender As Object, ByVal e As System.EventArgs)
        If txtPassword.Text = Session("Password") Then
            ControlsPanel.Visible = True
            PasswordPanel.Visible = False
            Prop.Year = ddlYear.SelectedItem.Text
            Prop.Month = ddlMonth.SelectedItem.Text
            Prop.Dept = DDLDeptType.SelectedValue
            Prop.Lock = BLL.LockStatus(Prop)

            If Prop.Lock = "Y" Then
                BLL.LockSalary(Prop)
                lblmsg.Text = ""
                lblGreen.Text = "Salary Unlocked for the month " + ddlMonth.SelectedItem.Text + " successfully."
                gvGenSalary.Enabled = True
                Image1.Visible = True
                Image2.Visible = True
            Else
                BLL.LockSalary(Prop)
                gvGenSalary.Enabled = False
                lblmsg.Text = ""
                lblGreen.Text = "Salary Locked for the month " + ddlMonth.SelectedItem.Text + " successfully."
                Image1.Visible = True
                Image2.Visible = True
            End If
            'Else
            '    lblmsg.Text = "Salary Not yet Generated for the month " + ddlMonth.SelectedItem.Text + "."
            '    lblGreen.Text = ""
            'End If

        ElseIf txtPassword.Text = "" Or txtPassword.Text <> Session("Password") Then
            ControlsPanel.Visible = True
            PasswordPanel.Visible = False
            lblmsg.Text = "Password Incorrect."
            lblGreen.Text = ""
            Image1.Visible = True
            Image2.Visible = True
        End If
        btnLockSalary.Focus()
    End Sub

    Protected Sub ddlMonth_TextChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles ddlMonth.TextChanged
        ddlMonth.Focus()
    End Sub

    Protected Sub gvGenSalary_Sorting(ByVal sender As Object, ByVal e As System.Web.UI.WebControls.GridViewSortEventArgs) Handles gvGenSalary.Sorting
        Dim sortingDirection As String = String.Empty
        If dir() = SortDirection.Ascending Then
            dir = SortDirection.Descending
            sortingDirection = "Desc"
        Else
            dir = SortDirection.Ascending
            sortingDirection = "Asc"
        End If

        LinkButton1.Focus()
        Prop.Year = ddlYear.SelectedItem.Text
        Prop.Month = ddlMonth.SelectedItem.Text
        Dim dt2 As New DataTable
        'gvGenSalary.DataSource = BLL.GetDetails(Prop)
        dt2 = BLL.RptSalSlip(Prop)
        Prop.Lock = BLL.LockStatus(Prop)
        Dim sortedView As New DataView(dt2)
        sortedView.Sort = Convert.ToString(e.SortExpression) & " " & sortingDirection
        gvGenSalary.DataSource = sortedView
        gvGenSalary.DataBind()

        If Prop.Lock = "Y" Then
            gvGenSalary.Visible = True
            gvGenSalary.Enabled = False
        Else
            gvGenSalary.Visible = True
            gvGenSalary.Enabled = True
        End If

    End Sub
    Public Property dir() As SortDirection
        Get
            If ViewState("dirState") Is Nothing Then
                ViewState("dirState") = SortDirection.Descending
            End If
            Return DirectCast(ViewState("dirState"), SortDirection)
        End Get
        Set(ByVal value As SortDirection)
            ViewState("dirState") = value
        End Set
    End Property
End Class
'Commented by Nethra during Build 13-Apr-2012

'Protected Sub ddlYear_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles ddlYear.SelectedIndexChanged
'    GVFill()
'End Sub

'Function Check(ByVal item As UInt16) As String
'    Dim Str As String
'    If item = 0 Then
'        Str = "UnLock"
'    Else
'        Str = "Lock"
'    End If
'    Return Str
'End Function

'Protected Sub gvGenSalary_PageIndexChanging(ByVal sender As Object, ByVal e As System.Web.UI.WebControls.GridViewPageEventArgs) Handles gvGenSalary.PageIndexChanging
'    gvGenSalary.PageIndex = e.NewPageIndex
'    GVFill()
'End Sub

'Protected Sub gvGenSalary_RowCancelingEdit(ByVal sender As Object, ByVal e As System.Web.UI.WebControls.GridViewCancelEditEventArgs) Handles gvGenSalary.RowCancelingEdit
'    gvGenSalary.EditIndex = -1
'    GVFill()
'End Sub

''Protected Sub gvGenSalary_RowDataBound(ByVal sender As Object, ByVal e As System.Web.UI.WebControls.GridViewRowEventArgs) Handles gvGenSalary.RowDataBound
''    If e.Row.RowType = DataControlRowType.DataRow Then
''        If e.Row.RowState = 4 Or e.Row.RowState = 5 Then
''            Dim ddlEmployee1 As DropDownList = CType(e.Row.Cells(1).FindControl("ddlEmployee"), DropDownList)
''            ddlEmployee1.SelectedValue = CType(e.Row.Cells(0).FindControl("HfEmpID"), HiddenField).Value
''        End If
''    End If
''End Sub

'Protected Sub gvGenSalary_RowEditing(ByVal sender As Object, ByVal e As System.Web.UI.WebControls.GridViewEditEventArgs) Handles gvGenSalary.RowEditing
'    'Dim ddlEmployee1 As DropDownList = CType(e.Row.Cells(1).FindControl("ddlEmployee"), DropDownList)
'    'ddlEmployee1.SelectedValue = CType(e.Row.Cells(0).FindControl("HfEmpID"), HiddenField).Value

'    gvGenSalary.EditIndex = e.NewEditIndex
'    GVFill()
'End Sub
'Sub aler(ByVal str As String)
'    Dim alert As String = "alert('" & str & "');"
'    ScriptManager.RegisterStartupScript(Me, Me.GetType, "alert", alert, True)
'End Sub

'Protected Sub gvGenSalary_RowUpdating(ByVal sender As Object, ByVal e As System.Web.UI.WebControls.GridViewUpdateEventArgs) Handles gvGenSalary.RowUpdating
'    gvGenSalary.EditIndex = -1
'    Prop.MS_id = Int64.Parse(gvGenSalary.DataKeys(e.RowIndex).Value)
'    'Prop.EMPid = Int64.Parse(CType(gvGenSalary.Rows(e.RowIndex).Cells(1).FindControl("ddlEmployee"), DropDownList).SelectedItem.Value)
'    Prop.EMPid = CType(gvGenSalary.Rows(e.RowIndex).Cells(0).FindControl("HfEmpID"), HiddenField).Value()

'    If CType(gvGenSalary.Rows(e.RowIndex).Cells(2).FindControl("txtGSalary"), TextBox).Text.ToString = "" Then
'        Prop.GrossSalary = 0
'    Else
'        Prop.GrossSalary = CDbl(CType(gvGenSalary.Rows(e.RowIndex).Cells(2).FindControl("txtGSalary"), TextBox).Text)
'    End If

'    If CType(gvGenSalary.Rows(e.RowIndex).Cells(3).FindControl("txtNSalary"), TextBox).Text.ToString = "" Then
'        Prop.NetSalary = 0
'    Else
'        Prop.NetSalary = CDbl(CType(gvGenSalary.Rows(e.RowIndex).Cells(3).FindControl("txtNSalary"), TextBox).Text)
'    End If
'    'Commented by pradeepa(Since its not a editable field)

'    'If CType(gvGenSalary.Rows(e.RowIndex).Cells(4).FindControl("txtWorkDays"), TextBox).Text.ToString = "" Then
'    '    Prop.WorkDays = 0
'    'Else
'    '    Prop.WorkDays = Int16.Parse(CType(gvGenSalary.Rows(e.RowIndex).Cells(4).FindControl("txtWorkDays"), TextBox).Text)
'    'End If

'    'If CType(gvGenSalary.Rows(e.RowIndex).Cells(5).FindControl("txtWDinMonth"), TextBox).Text.ToString = "" Then
'    '    Prop.WD_InMonth = 0
'    'Else
'    '    Prop.WD_InMonth = Int16.Parse(CType(gvGenSalary.Rows(e.RowIndex).Cells(5).FindControl("txtWDinMonth"), TextBox).Text)
'    'End If

'    If CType(gvGenSalary.Rows(e.RowIndex).Cells(6).FindControl("txtBasicPay"), TextBox).Text.ToString = "" Then
'        Prop.BasicPay = 0
'    Else
'        Prop.BasicPay = CDbl(CType(gvGenSalary.Rows(e.RowIndex).Cells(6).FindControl("txtBasicPay"), TextBox).Text)
'    End If

'    If CType(gvGenSalary.Rows(e.RowIndex).Cells(7).FindControl("txtSplAllowance"), TextBox).Text.ToString = "" Then
'        Prop.SpecialAllowance = 0
'    Else
'        Prop.SpecialAllowance = CDbl(CType(gvGenSalary.Rows(e.RowIndex).Cells(7).FindControl("txtSplAllowance"), TextBox).Text)
'    End If

'    If CType(gvGenSalary.Rows(e.RowIndex).Cells(8).FindControl("txtHRA"), TextBox).Text.ToString = "" Then
'        Prop.HRA = 0
'    Else
'        Prop.HRA = CDbl(CType(gvGenSalary.Rows(e.RowIndex).Cells(8).FindControl("txtHRA"), TextBox).Text)
'    End If

'    If CType(gvGenSalary.Rows(e.RowIndex).Cells(9).FindControl("txtMedical"), TextBox).Text.ToString = "" Then
'        Prop.Medical = 0
'    Else
'        Prop.Medical = CDbl(CType(gvGenSalary.Rows(e.RowIndex).Cells(9).FindControl("txtMedical"), TextBox).Text)
'    End If

'    If CType(gvGenSalary.Rows(e.RowIndex).Cells(10).FindControl("txtTAllowance"), TextBox).Text.ToString = "" Then
'        Prop.TransportAllowance = 0
'    Else
'        Prop.TransportAllowance = CDbl(CType(gvGenSalary.Rows(e.RowIndex).Cells(10).FindControl("txtTAllowance"), TextBox).Text)
'    End If

'    If CType(gvGenSalary.Rows(e.RowIndex).Cells(11).FindControl("txtOAllowance"), TextBox).Text.ToString = "" Then
'        Prop.OtherAllowance = 0
'    Else
'        Prop.OtherAllowance = CDbl(CType(gvGenSalary.Rows(e.RowIndex).Cells(11).FindControl("txtOAllowance"), TextBox).Text)
'    End If

'    If CType(gvGenSalary.Rows(e.RowIndex).Cells(12).FindControl("txtIncentives"), TextBox).Text.ToString = "" Then
'        Prop.Incentive = 0
'    Else
'        Prop.Incentive = CDbl(CType(gvGenSalary.Rows(e.RowIndex).Cells(12).FindControl("txtIncentives"), TextBox).Text)
'    End If

'    If CType(gvGenSalary.Rows(e.RowIndex).Cells(13).FindControl("txtMisPay"), TextBox).Text.ToString = "" Then
'        Prop.MiscellaneousPay = 0
'    Else
'        Prop.MiscellaneousPay = CDbl(CType(gvGenSalary.Rows(e.RowIndex).Cells(13).FindControl("txtMisPay"), TextBox).Text)
'    End If

'    If CType(gvGenSalary.Rows(e.RowIndex).Cells(14).FindControl("txtTaxDedu"), TextBox).Text.ToString = "" Then
'        Prop.TaxDeduction = 0
'    Else
'        Prop.TaxDeduction = CDbl(CType(gvGenSalary.Rows(e.RowIndex).Cells(14).FindControl("txtTaxDedu"), TextBox).Text)
'    End If

'    If CType(gvGenSalary.Rows(e.RowIndex).Cells(15).FindControl("txtAdvStlDedu"), TextBox).Text.ToString = "" Then
'        Prop.AdvStdDedu = 0
'    Else
'        Prop.AdvStdDedu = CDbl(CType(gvGenSalary.Rows(e.RowIndex).Cells(15).FindControl("txtAdvStlDedu"), TextBox).Text)
'    End If

'    If CType(gvGenSalary.Rows(e.RowIndex).Cells(16).FindControl("txtOthDedu"), TextBox).Text.ToString = "" Then
'        Prop.OtherAllowance = 0
'    Else
'        Prop.OtherAllowance = CDbl(CType(gvGenSalary.Rows(e.RowIndex).Cells(16).FindControl("txtOthDedu"), TextBox).Text)
'    End If

'    If CType(gvGenSalary.Rows(e.RowIndex).Cells(18).FindControl("txtLOPay"), TextBox).Text.ToString = "" Then
'        Prop.LOP = 0
'    Else
'        Prop.LOP = CDbl(CType(gvGenSalary.Rows(e.RowIndex).Cells(18).FindControl("txtLOPay"), TextBox).Text)
'    End If
'    If CType(gvGenSalary.Rows(e.RowIndex).Cells(17).FindControl("txtOthPay"), TextBox).Text.ToString = "" Then
'        Prop.OtherPay = 0
'    Else
'        Prop.OtherPay = CDbl(CType(gvGenSalary.Rows(e.RowIndex).Cells(17).FindControl("txtOthPay"), TextBox).Text)
'    End If

'    If CType(gvGenSalary.Rows(e.RowIndex).Cells(19).FindControl("txtITTaxDedu"), TextBox).Text.ToString = "" Then
'        Prop.ITTaxDeduction = 0
'    Else
'        Prop.ITTaxDeduction = CDbl(CType(gvGenSalary.Rows(e.RowIndex).Cells(19).FindControl("txtITTaxDedu"), TextBox).Text)
'    End If
'    BLL.UpdateGen_Salary(Prop)
'    GVFill()
'End Sub
'<System.Web.Services.WebMethod()> _
'Public Shared Sub AbandonSession()
'    Dim i As Int16 = UserDetailsDB.UpdateUserlog()
'End Sub


